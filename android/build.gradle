plugins {
    id "java-library"
    id "idea"
}

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {

    implementation group: 'net.luminis.networking', name: 'kwik', version: '0.8'
    implementation group: 'net.luminis.networking', name: 'qpack', version: '1.0'

    def junitVersion = "5.10.0"
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-params:$junitVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:$junitVersion")

    testImplementation("org.assertj:assertj-core:3.24.2")
    testImplementation("org.mockito:mockito-core:5.6.0")
}

task generateAndroidSources(type: Copy) {
    from ("../src/main/java") {
        exclude "**/server/**"
    }
    into "${buildDir}/generated/main/java"
    filter { line -> line.replaceAll("import java.net.http.", "import net.luminis.httpclient.") }
}

tasks.named("assemble") {
    dependsOn(generateAndroidSources)
}
tasks.named("compileJava") {
    dependsOn(generateAndroidSources)
}

sourceSets {
    main {
        java {
            srcDir("httpclient/src/main/java")
            srcDir "${buildDir}/generated/main/java"
        }
    }

    test {
        java {
            srcDir("httpclient/src/test/java")
        }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jar {
    include "net/luminis/httpclient/**"
    include "net/luminis/http3/**"
    exclude "net/luminis/http3/server/**"
    include "net/luminis/qpack/**"
    from {
        configurations.compileClasspath.findAll { it.name =~ /qpack.*\.jar/ }.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
